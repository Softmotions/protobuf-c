meta {
  name { protobuf-c }
  version { 1.5.3 }
  website { https://github.com/Softmotions/protobuf-c }
}

option { BUILD_TYPE                       Build type: Release|Debug }
option { ENABLE_DEBINFO                   Generate debuginfo even in release mode }
option { PBC_BUILD_TESTS                  Build test cases }
option { PBC_RUN_TESTS                    Build and run test cases }
option { PBC_PUBLIC_HEADERS_DESTINATION   Installation path relative to INSTALL_PREFIX for public proto and header files. }

if { !defined { PBC_PUBLIC_HEADERS_DESTINATION }
  set {
    PBC_PUBLIC_HEADERS_DESTINATION ^{ ${INSTALL_INCLUDE_DIR} / ${META_NAME} }
  }
}

if { !defined { BUILD_TYPE }
  set {
    BUILD_TYPE Release
  }
}

if { ${PBC_RUN_TESTS}
  set {
    PBC_BUILD_TESTS 1
  }
}

env {
  PKG_CONFIG_PATH
  C{${INSTALL_PKGCONFIG_DIR}}
}

check {
  system.sh
  protobuf-c.sh
}

if { ${SYSTEM_BIGENDIAN} 
  set {
    WORDS_BIGENDIAN 1
  }
}

if { eq { ${BUILD_TYPE} Release }
  set {
    STRIP_CMD strip --strip-debug
  }
}

configure {
  config.h.in
}

set {
  XFLAGS
  if { ${WORDS_BIGENDIAN} 
    -DWORDS_BIGENDIAN
  }
  if { prefix { ${BUILD_TYPE} Debug }
    -O0
    -g
    -DDEBUG -D_DEBUG -UNDEBUG
  } else {
    -O3
    if { ${ENABLE_DEBINFO}
      -g -ggdb
    }
    -DNDEBUG
  }
  -I C{}
  -I S{}
  -I S{protobuf-c}
}

set {
  CFLAGS
  ..${XFLAGS}
}

set {
  CXXFLAGS
  -std=c++17
  ..${XFLAGS}
  if { contains {${CXX} clang}
    # https://github.com/abseil/abseil-cpp/issues/1747  
    -fclang-abi-compat=17
  }
}

run {
  exec { ${PROTOBUF_PROTOC_EXEC} --cpp_out CC{} -I S{} protobuf-c/protobuf-c.proto }
  consumes {
    protobuf-c/protobuf-c.proto 
  }
  produces {
    CC{protobuf-c/protobuf-c.pb.cc}
    CC{protobuf-c/protobuf-c.pb.h}
  }
}

include { protobuf-c/Autark }
include { protoc-gen-c/Autark }

if { ${PBC_BUILD_TESTS} 
  include { t/Autark }
}

