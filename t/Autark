set {
  GEN_C_SOURCES
  CC{test.pb-c.c}
  CC{test-optimized.pb-c.c}
  CC{test-full.pb-c.c}
  CC{test-proto3.pb-c.c}
}

set {
  GEN_CXX_SOURCES
  CC{test-full.pb.cc}
}

run {
  exec { 
    ${PROTOBUF_PROTOC_EXEC} 
    -I S{}
    -I SS{}
    --plugin ${PROTOC_GEN_C_EXEC} 
    --c_out CC{}
    test.proto
    test-optimized.proto
    test-full.proto
  }
  exec {
    ${PROTOBUF_PROTOC_EXEC} 
    -I S{}
    -I SS{}
    --plugin ${PROTOC_GEN_C_EXEC} 
    --c_out CC{}
    test-proto3.proto
  }
  consumes {
    ${PROTOC_GEN_C_EXEC}
  }
  produces {
    CC{test.pb-c.h}
    CC{test-optimized.pb-c.h}
    CC{test-full.pb-c.h}
    CC{test-proto3.pb-c.h}
    ..${GEN_C_SOURCES}
  }
}

run {
  exec {
    ${PROTOBUF_PROTOC_EXEC} 
    -I S{}
    -I SS{}
    --cpp_out CC{}
    test-full.proto
  }
  produces {
    CC{test-full.pb.h}
    ..${GEN_CXX_SOURCES}
  }
}

set {
  CXXFLAGS
  ..${CXXFLAGS}
  ..@@{ ${PKGCONF} --cflags protobuf }
}

cxx {
  set {_
    generated-code2/cxx-generate-packed-data.cc
    ..${GEN_CXX_SOURCES}
  }
  ${CXXFLAGS}
  ${CXX}
}

run {
  exec { ${CXX} -o cxx-generate-packed-data 
         set{_ ..${LDFLAGS} ..@@{ ${PKGCONF} --libs protobuf }}
         C{protobuf-c/protobuf-c.pb.o}
         CC{test-full.pb.o}
         CC{generated-code2/cxx-generate-packed-data.o} 
  }
  produces {
    cxx-generate-packed-data  
  }
  consumes {
    ${CXX_OBJS}
    C{protobuf-c/protobuf-c.pb.o}
  }
}

run {
  shell { CC{cxx-generate-packed-data} > CC{generated-code2/test-full-cxx-output.inc} }
  consumes {
    cxx-generate-packed-data
  }
  produces {
    set {
      FULL_CXX_OUTPUT_INC
        CC{generated-code2/test-full-cxx-output.inc} 
    }
  }
}

cc {
  set {_ 
    generated-code/test-generated-code.c
    generated-code2/test-generated-code2.c
    ..${GEN_C_SOURCES}
  }
  ${CFLAGS}
  ${CC}
  consumes {
    ${FULL_CXX_OUTPUT_INC}
  }
}

run {
  exec { ${CC} -o test-generated-code ${LDFLAGS} test.pb-c.o generated-code/test-generated-code.o ${LIBPROTOBUF_C_A} }
  consumes {
    ${CC_OBJS}
    ${LIBPROTOBUF_C_A} 
  }
}

run {
  exec { ${CC} -o test-generated-code2 ${LDFLAGS} 
    generated-code2/test-generated-code2.o
    test-full.pb-c.o 
    test-optimized.pb-c.o 
    ${LIBPROTOBUF_C_A} 
  }
  consumes {
    ${CC_OBJS}
    ${LIBPROTOBUF_C_A} 
    ${FULL_CXX_OUTPUT_INC}
  }
  produces {
    test-generated-code2 
  }
}

run {
  shell { 
    cp -f SS{generated-code/test-generated-code.c} CC{generated-code/test-generated-code3.c} 
  }
  consumes {
    SS{generated-code/test-generated-code.c} 
  }
  produces {
    CC{generated-code/test-generated-code3.c}
  }
}

cc {
  CC{generated-code/test-generated-code3.c}
  set{_ ..${CFLAGS} -DPROTO3}
  ${CC}
  consumes {
    CC{test-proto3.pb-c.h}
    CC{generated-code/test-generated-code3.c}
  }
}

run {
  exec { ${CC} -o test-generated-code3 ${LDFLAGS} test-proto3.pb-c.o generated-code/test-generated-code3.o ${LIBPROTOBUF_C_A} }
  consumes {
    ${CC_OBJS}
    ${LIBPROTOBUF_C_A} 
  }
}

